version: '3'

services:
  stac:
    container_name: stac
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - APP_HOST=0.0.0.0
      - APP_PORT=8081
      - HOST=0.0.0.0
      - PORT=8081
      - ENVIRONMENT=local
      # https://github.com/tiangolo/uvicorn-gunicorn-docker#web_concurrency
      - WEB_CONCURRENCY=10
      # https://github.com/tiangolo/uvicorn-gunicorn-docker#workers_per_core
      # - WORKERS_PER_CORE=1
      # https://github.com/tiangolo/uvicorn-gunicorn-docker#max_workers
      # - MAX_WORKERS=10
      # Postgres connection
      - POSTGRES_USER=username
      - POSTGRES_PASS=password
      - POSTGRES_DBNAME=postgis
      - POSTGRES_HOST_READER=database
      - POSTGRES_HOST_WRITER=database
      - POSTGRES_PORT=5432
      - DB_MIN_CONN_SIZE=1
      - DB_MAX_CONN_SIZE=10
    depends_on:
      - database
    command:
      bash -c "bash /tmp/scripts/wait-for-it.sh database:5432 -t 60 && /start.sh"
    volumes:
      - ./scripts:/tmp/scripts

  benchmark:
    container_name: benchmark
    build:
      context: .
      dockerfile: Dockerfile.benchmark
    depends_on:
      - database
      - stac
    command:
      bash -c "stac-api-benchmark --url http://stac:8081 --collection s2_l2a --verbosity ERROR --num-features 20 --max-items 20"
    volumes:
      - ./scripts:/tmp/scripts

  database:
    container_name: database
    platform: linux/amd64
    image: ghcr.io/stac-utils/pgstac:v0.7.1
    environment:
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgis
      - PGUSER=username
      - PGDATABASE=postgis
    ports:
      - "5439:5432"
    command: postgres -N 500
    volumes:
      - ./.pgdata:/var/lib/postgresql/data

networks:
  default:
    name: stac-network
